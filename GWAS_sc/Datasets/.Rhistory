#Apply this criteria to Notaras DEGs
#Convert logFC to log2FC
notaras_deg$Log2FC <- log2(exp(notaras_deg$logFC))
subset_notaras_deg <- notaras_deg[notaras_deg$log2FC > 0.585 & notaras_deg$FDR < 0.01, ]
# no genes from notaras meet this critera so changing the FDR threshold to 0.1
subset_notaras_deg <- notaras_deg[notaras_deg$log2FC > 0.585 & notaras_deg$FDR < 0.1, ]
library(VennDiagram)
library(gridExtra)
# Extract gene names from the data frames
notaras_genes <- subset_notaras_deg$Gene_name
sawada_genes <- sawada_deg$Gene_name
# Create a list of gene sets
gene_sets <- list(notaras_genes = notaras_genes, sawada_genes = sawada_genes)
# Create a Venn diagram
venn.plot <- venn.diagram(
x = gene_sets,
category.names = c("Notaras Genes", "Sawada Genes"),
category.colours = c("blue", "green"),
filename = NULL,
# Circles
lwd = 1,
lty = 'blank',
fill = c(alpha("blue", 0.3), alpha('green', 0.3)),
# Numbers
cex = 1.0,
fontfamily = "sans",
# Adjust plot size to visually make the circles appear the same size
width = 8,
height = 8,
# Adjust margin
margin = 0.2  # Adjust as needed
)
# Display the plot
grid.newpage()
grid.draw(venn.plot)
common_genes <- merge(subset_notaras_deg, sawada_deg, by = "Gene_name")
View(common_genes)
View(subset_notaras_deg)
View(common_genes)
# Merge dataframes to find common genes
common_genes <- merge(subset_notaras_deg, sawada_deg, by = "Gene_name")
#Rename columns
common_genes$Log2FC_notaras <- common_genes$Log2FC.x
common_genes$Log2FC_sawada <- common_genes$Log2FC.y
# Extract common genes and relevant columns for heatmap
common_genes_data <- common_genes[, c("Gene_name", "Log2FC_notaras", "Log2FC_sawada")]
# Create a matrix of gene expression values
gene_matrix <- as.matrix(common_genes_data[, c("Log2FC_notaras", "Log2FC_sawada")])
# Create a heatmap using pheatmap
pheatmap(gene_matrix,
cluster_rows = TRUE,
cluster_cols = TRUE,
annotation_col = common_genes_data[, c("Log2FC_notaras", "Log2FC_sawada")],
main = "Heatmap of Common SCZ Organoid Genes")
View(gene_matrix)
# Merge dataframes to find common genes
common_genes <- merge(subset_notaras_deg, sawada_deg, by = "Gene_name")
#Rename columns
common_genes$Log2FC_notaras <- common_genes$Log2FC.x
common_genes$Log2FC_sawada <- common_genes$Log2FC.y
# Extract common genes and relevant columns for heatmap
common_genes_data <- common_genes[, c("Gene_name", "Log2FC_notaras", "Log2FC_sawada")]
# Set 'Gene_name' as row names
rownames(common_genes_data) <- common_genes_data$Gene_name
# Create a matrix of gene expression values
gene_matrix <- as.matrix(common_genes_data[, c("Log2FC_notaras", "Log2FC_sawada")])
# Create a heatmap using pheatmap
pheatmap(gene_matrix,
cluster_rows = TRUE,
cluster_cols = TRUE,
annotation_col = common_genes_data[, c("Log2FC_notaras", "Log2FC_sawada")],
main = "Heatmap of Common SCZ Organoid Genes")
pheatmap(gene_matrix,
cluster_rows = FALSE,
cluster_cols = FALSE,
annotation_col = common_genes_data[, c("Log2FC_notaras", "Log2FC_sawada")],
main = "Heatmap of Common SCZ Organoid Genes")
# Merge dataframes to find common genes
common_genes <- merge(subset_notaras_deg, sawada_deg, by = "Gene_name")
#Rename columns
common_genes$Log2FC_notaras <- as.numeric(common_genes$Log2FC.x)
common_genes$Log2FC_sawada <- as.numeric(common_genes$Log2FC.y)
# Extract common genes and relevant columns for heatmap
common_genes_data <- common_genes[, c("Gene_name", "Log2FC_notaras", "Log2FC_sawada")]
# Set 'Gene_name' as row names
rownames(common_genes_data) <- common_genes_data$Gene_name
# Create a matrix of gene expression values
gene_matrix <- as.matrix(common_genes_data[, c("Log2FC_notaras", "Log2FC_sawada")])
# Create a heatmap using pheatmap
pheatmap(gene_matrix,
cluster_rows = TRUE,
cluster_cols = TRUE,
annotation_col = common_genes_data[, c("Log2FC_notaras", "Log2FC_sawada")],
main = "Heatmap of Common SCZ Organoid Genes")
head(gene_matrix)
any(!is.finite(gene_matrix))
View(gene_matrix)
class(gene_matrix)
gene_matrix <- as.matrix(common_genes_data)
View(gene_matrix)
gene_matrix <- gene_matrix[, -1]
View(gene_matrix)
pheatmap(gene_matrix,
cluster_rows = TRUE,
cluster_cols = TRUE,
annotation_col = common_genes_data[, c("Log2FC_notaras", "Log2FC_sawada")],
main = "Heatmap of Common SCZ Organoid Genes")
pheatmap(gene_matrix,
cluster_rows = TRUE,
cluster_cols = TRUE,
main = "Heatmap of Common SCZ Organoid Genes")
common_genes_data$Log2FC_notaras <- as.numeric(common_genes_data$Log2FC_notaras)
common_genes_data$Log2FC_sawada <- as.numeric(common_genes_data$Log2FC_sawada)
# Extract common genes and relevant columns for heatmap
common_genes_data <- common_genes[, c("Gene_name", "Log2FC_notaras", "Log2FC_sawada")]
# Set 'Gene_name' as row names
rownames(common_genes_data) <- common_genes_data$Gene_name
# Create a matrix of gene expression values
gene_matrix <- as.matrix(common_genes_data[, c("Log2FC_notaras", "Log2FC_sawada")])
# Create a heatmap using pheatmap
pheatmap(gene_matrix,
cluster_rows = TRUE,
cluster_cols = TRUE,
annotation_col = common_genes_data[, c("Log2FC_notaras", "Log2FC_sawada")],
main = "Heatmap of Common SCZ Organoid Genes")
pheatmap(gene_matrix,
cluster_rows = TRUE,
cluster_cols = TRUE,
main = "Heatmap of Common SCZ Organoid Genes")
pheatmap(gene_matrix,
cluster_rows = TRUE,
cluster_cols = TRUE
main = "Heatmap of Common SCZ Organoid Genes")
pheatmap(gene_matrix,
cluster_rows = TRUE,
cluster_cols = TRUE,
main = "Heatmap of Common SCZ Organoid Genes")
# Merge dataframes to find common genes
common_genes <- merge(subset_notaras_deg, sawada_deg, by = "Gene_name")
#Rename columns
common_genes$Log2FC_notaras <- as.numeric(common_genes$Log2FC.x)
common_genes$Log2FC_sawada <- as.numeric(common_genes$Log2FC.y)
# Convert 'Log2FC_notaras' and 'Log2FC_sawada' to numeric
common_genes_data$Log2FC_notaras <- as.numeric(common_genes_data$Log2FC_notaras)
common_genes_data$Log2FC_sawada <- as.numeric(common_genes_data$Log2FC_sawada)
# Extract common genes and relevant columns for heatmap
common_genes_data <- common_genes[, c("Gene_name", "Log2FC_notaras", "Log2FC_sawada")]
# Set 'Gene_name' as row names
rownames(common_genes_data) <- common_genes_data$Gene_name
# Create a matrix of gene expression values
gene_matrix <- as.matrix(common_genes_data[, c("Log2FC_notaras", "Log2FC_sawada")])
# Create a heatmap using pheatmap
pheatmap(gene_matrix,
cluster_rows = TRUE,
cluster_cols = TRUE,
main = "Heatmap of Common SCZ Organoid Genes")
library(biomaRt)
ensembl = useMart("ensembl", dataset="hsapiens_gene_ensembl")
setwd("C:/Users/fallo/OneDrive/Documents/URF_2023/FUMA_Results")
expression_data = read.table('GSE104276_Human_Prefrontal_cortex_per_ages.txt', sep='\t', header=TRUE)
genes <- expression_data$GENE
genes_list <- getBM(filters = "ensembl_gene_id", attributes = c("ensembl_gene_id", "hgnc_symbol"), values = genes, mart = ensembl)
listMarts(host = TRUE)
listMarts()
rlang::last_trace()
BiocFileCache::clearCache()
library(AnnotationDbi)
library(org.Hs.eg.db)
ensembl_ids <- c(expression_data$GENE)
# Convert Ensembl IDs to Symbol
symbols <- mapIds(org.Hs.eg.db, keys = ensembl_ids, column = "SYMBOL", keytype = "ENSEMBL")
head(symbols)
# Merge DataFrame with gene names
exp_with_names <- left_join(expression_data, symbols, by = c("GENE" = "symbol"))
# Merge DataFrame with gene names
exp_with_names <- left_join(expression_data, symbols, by = c("GENE" = "ENSEMBL"))
# Convert Ensembl IDs to Symbol and create a data frame
symbols <- data.frame(ENSEMBL = ensembl_ids, SYMBOL = mapIds(org.Hs.eg.db, keys = ensembl_ids, column = "SYMBOL", keytype = "ENSEMBL"))
View(symbols)
# Merge DataFrame with gene names
exp_with_names <- left_join(expression_data, symbols, by = "GENE"= "ENSEMBL")
# Merge DataFrame with gene names
exp_with_names <- left_join(expression_data, symbols, by = c("GENE"= "ENSEMBL"))
View(exp_with_names)
#Save csv
write.csv(exp_with_names,"zhong_expression_gene_symbols.csv")
getwd()
selected_columns <- c("SYMBOL", sig_cell_types)
#Subset dataset for sig cell types
sig_cell_types = c('GW26_GABAergic_neurons', 'GW23_GABAergic_neurons', 'GW26_Astrocytes','GW26_Neurons', 'GW16_Neurons','GW16_GABAergic_neurons', 'GW10_Neurons')
selected_columns <- c("SYMBOL", sig_cell_types)
subset_exp_data <- exp_with_namess[selected_columns]
subset_exp_data <- exp_with_names[selected_columns]
View(subset_exp_data)
#Save csv
write.csv(subset_exp_data,"zhong_exp_sig_cells.csv")
#########################################################
setwd("C:/Users/fallo/OneDrive/Documents/URF_2023/FUMA_Results/FUMA_job296771")
gwas_genes <- read.table("genes.txt", header = TRUE)
View(gwas_genes)
fetal_cells = read.csv("zhong_exp_sig_cells.csv")
#select relevant working directory
setwd("C:/Users/fallo/OneDrive/Documents/URF_2023/Datasets")
fetal_cells = read.csv("zhong_exp_sig_cells.csv")
getwd()
setwd("C:/Users/fallo/OneDrive/Documents/URF_2023/Datasets")
fetal_cells = read.csv("zhong_exp_sig_cells.csv")
fetal_cells = read.csv("zhong_exp_sig_cells.csv")
View(fetal_cells)
gwas_genes = read.table("SCZ_GWAS_mapped_genes.txt", header = TRUE)
rm(expression_data)
rm(symbols)
View(gwas_genes)
View(notaras_deg)
#Rename column
gwas_genes$Gene_name <- gwas_genes$symbol
View(gwas_genes)
#Rename column
gwas_genes$Gene_name <- gwas_genes$symbol
# Extract gene names from the data frames
notaras_genes <- subset_notaras_deg$Gene_name
sawada_genes <- sawada_deg$Gene_name
gwas_genes <- gwas_genes$Gene_name
# Create a list of gene sets
gene_sets <- list(notaras_genes = notaras_genes, sawada_genes = sawada_genes, gwas_genes = gwas_genes)
venn.plot <- venn.diagram(
x = listInput,
category.names = c("Notaras Genes", "GWAS Genes", "Sawada Genes"),
category.colours = c("red", "blue", "green"),
filename = NULL,
# Circles
lwd = 1,
lty = 'blank',
fill = c(alpha("blue",0.3), alpha('red',0.3), alpha('green',0.3)),
# Numbers
cex = 1.0,
fontface = "bold",
fontfamily = "sans",
# Set names
cat.cex = 1.0,
cat.fontface = "bold",
cat.default.pos = "outer",
cat.pos = c(-160, 0, 160),  # Adjusted angles
cat.dist = c(0.07, 0.07, 0.07), # Slightly increased distances to ensure clarity
cat.fontfamily = "sans",
rotation = 1,
# Adjust margin
margin = 0.2  # Adjust as needed
)
venn.plot <- venn.diagram(
x = gene_sets,
category.names = c("Notaras Genes", "GWAS Genes", "Sawada Genes"),
category.colours = c("red", "blue", "green"),
filename = NULL,
# Circles
lwd = 1,
lty = 'blank',
fill = c(alpha("blue",0.3), alpha('red',0.3), alpha('green',0.3)),
# Numbers
cex = 1.0,
fontface = "bold",
fontfamily = "sans",
# Set names
cat.cex = 1.0,
cat.fontface = "bold",
cat.default.pos = "outer",
cat.pos = c(-160, 0, 160),  # Adjusted angles
cat.dist = c(0.07, 0.07, 0.07), # Slightly increased distances to ensure clarity
cat.fontfamily = "sans",
rotation = 1,
# Adjust margin
margin = 0.2  # Adjust as needed
)
# Display the plot
grid.newpage()
grid.draw(venn.plot)
#Sawada selection criteria: log2FC > 0.585 and FDR < 0.01
#Apply this criteria to Notaras DEGs
#Convert logFC to log2FC
notaras_deg$Log2FC <- log2(exp(notaras_deg$logFC))
subset_notaras_deg <- notaras_deg[notaras_deg$log2FC > 0.585 & notaras_deg$FDR < 0.01, ]
# no genes from notaras meet this critera so changing the FDR threshold to 0.1
subset_notaras_deg <- notaras_deg[notaras_deg$log2FC > 0.585 & notaras_deg$FDR < 0.1, ]
library(VennDiagram)
library(gridExtra)
# Extract gene names from the data frames
notaras_genes <- subset_notaras_deg$Gene_name
sawada_genes <- sawada_deg$Gene_name
# Create a list of gene sets
gene_sets <- list(notaras_genes = notaras_genes, sawada_genes = sawada_genes)
# Create a Venn diagram
venn.plot <- venn.diagram(
x = gene_sets,
category.names = c("Notaras Genes", "Sawada Genes"),
category.colours = c("blue", "green"),
filename = NULL,
# Circles
lwd = 1,
lty = 'blank',
fill = c(alpha("blue", 0.3), alpha('green', 0.3)),
# Numbers
cex = 1.0,
fontfamily = "sans",
# Adjust plot size to visually make the circles appear the same size
width = 8,
height = 8,
# Adjust margin
margin = 0.2  # Adjust as needed
)
# Display the plot
grid.newpage()
grid.draw(venn.plot)
#Rename column
gwas_genes$Gene_name <- gwas_genes$symbol
fetal_cells = read.csv("zhong_exp_sig_cells.csv")
library(tidyr)
library(dplyr)
library(pheatmap)
library(ggplot2)
#select relevant working directory
setwd("C:/Users/fallo/OneDrive/Documents/URF_2023/Datasets")
fetal_cells = read.csv("zhong_exp_sig_cells.csv")
gwas = read.table("SCZ_GWAS_mapped_genes.txt", header = TRUE)
notaras_deg = read.csv("notaras_deg_condition.csv")
#skip first row
sawada_deg = read.csv("sawada_deg_condition.csv", header = TRUE, skip = 1)
#Sawada selection criteria: log2FC > 0.585 and FDR < 0.01
#Apply this criteria to Notaras DEGs
#Convert logFC to log2FC
notaras_deg$Log2FC <- log2(exp(notaras_deg$logFC))
subset_notaras_deg <- notaras_deg[notaras_deg$log2FC > 0.585 & notaras_deg$FDR < 0.01, ]
# no genes from notaras meet this critera so changing the FDR threshold to 0.1
subset_notaras_deg <- notaras_deg[notaras_deg$log2FC > 0.585 & notaras_deg$FDR < 0.1, ]
library(VennDiagram)
library(gridExtra)
# Extract gene names from the data frames
notaras_genes <- subset_notaras_deg$Gene_name
sawada_genes <- sawada_deg$Gene_name
# Create a list of gene sets
gene_sets <- list(notaras_genes = notaras_genes, sawada_genes = sawada_genes)
# Create a Venn diagram
venn.plot <- venn.diagram(
x = gene_sets,
category.names = c("Notaras Genes", "Sawada Genes"),
category.colours = c("blue", "green"),
filename = NULL,
# Circles
lwd = 1,
lty = 'blank',
fill = c(alpha("blue", 0.3), alpha('green', 0.3)),
# Numbers
cex = 1.0,
fontfamily = "sans",
# Adjust plot size to visually make the circles appear the same size
width = 8,
height = 8,
# Adjust margin
margin = 0.2  # Adjust as needed
)
# Display the plot
grid.newpage()
grid.draw(venn.plot)
# Merge dataframes to find common genes
common_genes <- merge(subset_notaras_deg, sawada_deg, by = "Gene_name")
#Rename columns
common_genes$Log2FC_notaras <- common_genes$Log2FC.x
common_genes$Log2FC_sawada <- common_genes$Log2FC.y
# Convert 'Log2FC_notaras' and 'Log2FC_sawada' to numeric
common_genes_data$Log2FC_notaras <- as.numeric(common_genes_data$Log2FC_notaras)
common_genes_data$Log2FC_sawada <- as.numeric(common_genes_data$Log2FC_sawada)
# Extract common genes and relevant columns for heatmap
common_genes_data <- common_genes[, c("Gene_name", "Log2FC_notaras", "Log2FC_sawada")]
# Set 'Gene_name' as row names
rownames(common_genes_data) <- common_genes_data$Gene_name
# Create a matrix of gene expression values
gene_matrix <- as.matrix(common_genes_data[, c("Log2FC_notaras", "Log2FC_sawada")])
# Set the size of the plotting device
options(repr.plot.width=8, repr.plot.height=6)
# Create a heatmap using pheatmap
pheatmap(gene_matrix,
cluster_rows = TRUE,
cluster_cols = TRUE,
main = "Heatmap of Common SCZ Organoid Genes")
#Rename column
gwas$Gene_name <- gwas_genes$symbol
#Rename column
gwas$Gene_name <- gwas$symbol
# Extract gene names from the data frames
notaras_genes <- subset_notaras_deg$Gene_name
sawada_genes <- sawada_deg$Gene_name
gwas_genes <- gwas$Gene_name
# Create a list of gene sets
gene_sets <- list(notaras_genes = notaras_genes, sawada_genes = sawada_genes, gwas_genes = gwas_genes)
venn.plot <- venn.diagram(
x = gene_sets,
category.names = c("Notaras Genes", "GWAS Genes", "Sawada Genes"),
category.colours = c("red", "blue", "green"),
filename = NULL,
# Circles
lwd = 1,
lty = 'blank',
fill = c(alpha("blue",0.3), alpha('red',0.3), alpha('green',0.3)),
# Numbers
cex = 1.0,
fontface = "bold",
fontfamily = "sans",
# Set names
cat.cex = 1.0,
cat.fontface = "bold",
cat.default.pos = "outer",
cat.pos = c(-160, 0, 160),  # Adjusted angles
cat.dist = c(0.07, 0.07, 0.07), # Slightly increased distances to ensure clarity
cat.fontfamily = "sans",
rotation = 1,
# Adjust margin
margin = 0.2  # Adjust as needed
)
# Display the plot
grid.newpage()
grid.draw(venn.plot)
#Sawada selection criteria: log2FC > 0.585 and FDR < 0.01
#Apply this criteria to Notaras DEGs
#Convert logFC to log2FC
notaras_deg$Log2FC <- log2(exp(notaras_deg$logFC))
#subset_notaras_deg <- notaras_deg[notaras_deg$log2FC > 0.585 & notaras_deg$FDR < 0.01, ]
# no genes from notaras meet this critera so changing the FDR threshold to 0.1
subset_notaras_deg <- notaras_deg[notaras_deg$Log2FC > 0.585 & notaras_deg$FDR < 0.1, ]
library(VennDiagram)
library(gridExtra)
# Extract gene names from the data frames
notaras_genes <- subset_notaras_deg$Gene_name
sawada_genes <- sawada_deg$Gene_name
# Create a list of gene sets
gene_sets <- list(notaras_genes = notaras_genes, sawada_genes = sawada_genes)
# Create a Venn diagram
venn.plot <- venn.diagram(
x = gene_sets,
category.names = c("Notaras Genes", "Sawada Genes"),
category.colours = c("blue", "green"),
filename = NULL,
# Circles
lwd = 1,
lty = 'blank',
fill = c(alpha("blue", 0.3), alpha('green', 0.3)),
# Numbers
cex = 1.0,
fontfamily = "sans",
# Adjust plot size to visually make the circles appear the same size
width = 8,
height = 8,
# Adjust margin
margin = 0.2  # Adjust as needed
)
# Display the plot
grid.newpage()
grid.draw(venn.plot)
# Merge dataframes to find common genes
common_genes <- merge(subset_notaras_deg, sawada_deg, by = "Gene_name")
#Rename columns
common_genes$Log2FC_notaras <- common_genes$Log2FC.x
common_genes$Log2FC_sawada <- common_genes$Log2FC.y
# Convert 'Log2FC_notaras' and 'Log2FC_sawada' to numeric
common_genes_data$Log2FC_notaras <- as.numeric(common_genes_data$Log2FC_notaras)
common_genes_data$Log2FC_sawada <- as.numeric(common_genes_data$Log2FC_sawada)
# Extract common genes and relevant columns for heatmap
common_genes_data <- common_genes[, c("Gene_name", "Log2FC_notaras", "Log2FC_sawada")]
# Set 'Gene_name' as row names
rownames(common_genes_data) <- common_genes_data$Gene_name
# Create a matrix of gene expression values
gene_matrix <- as.matrix(common_genes_data[, c("Log2FC_notaras", "Log2FC_sawada")])
# Set the size of the plotting device
options(repr.plot.width=8, repr.plot.height=6)
# Create a heatmap using pheatmap
pheatmap(gene_matrix,
cluster_rows = TRUE,
cluster_cols = TRUE,
main = "Heatmap of Common SCZ Organoid Genes")
#Rename column
gwas$Gene_name <- gwas$symbol
# Extract gene names from the data frames
notaras_genes <- subset_notaras_deg$Gene_name
sawada_genes <- sawada_deg$Gene_name
gwas_genes <- gwas$Gene_name
# Create a list of gene sets
gene_sets <- list(notaras_genes = notaras_genes, sawada_genes = sawada_genes, gwas_genes = gwas_genes)
venn.plot <- venn.diagram(
x = gene_sets,
category.names = c("Notaras Genes", "GWAS Genes", "Sawada Genes"),
category.colours = c("red", "blue", "green"),
filename = NULL,
# Circles
lwd = 1,
lty = 'blank',
fill = c(alpha("blue",0.3), alpha('red',0.3), alpha('green',0.3)),
# Numbers
cex = 1.0,
fontface = "bold",
fontfamily = "sans",
# Set names
cat.cex = 1.0,
cat.fontface = "bold",
cat.default.pos = "outer",
cat.pos = c(-160, 0, 160),  # Adjusted angles
cat.dist = c(0.07, 0.07, 0.07), # Slightly increased distances to ensure clarity
cat.fontfamily = "sans",
rotation = 1,
# Adjust margin
margin = 0.2  # Adjust as needed
)
# Display the plot
grid.newpage()
grid.draw(venn.plot)
